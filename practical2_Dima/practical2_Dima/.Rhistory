############################## Script 3 ##############################
genetic_drift_bottle<-function(p_0,Ne,tgen) {
alelos<-c(1,0) #1 A and 0 al (numerical for estimating frequency directly)
pvector<-c();
pvector[1]<-p_0;
p_ = p_0;
xaxis<-c(0:tgen)
for (i in 2:(tgen+1)){
if (i%%7==0){
#print(i)
Ne=Ne%/%10
print(paste('bottleneck',Ne))
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
p_=p_i
#print(pvector[i])
}
else{
Ne=Ne*1.5
print(Ne)
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
#print(pvector[i])
p_=p_i
}
}
plot(xaxis,pvector,xlim= c(0,tgen),ylim= c(0,1),type = "l", main = paste("Genetic Drift -Population size = ",Ne), xlab="Generation",ylab="Frequency")
}
genetic_drift_bottle(0.3,5,30)
genetic_drift_bottle(0.3,5,10)
genetic_drift_bottle(0.5,5,50)
genetic_drift_bottle(0.5,10,50)
genetic_drift_bottle(0.5,10,100)
############################## Script 3 ##############################
genetic_drift_bottle<-function(p_0,Ne,tgen) {
alelos<-c(1,0) #1 A and 0 al (numerical for estimating frequency directly)
pvector<-c();
pvector[1]<-p_0;
p_ = p_0;
xaxis<-c(0:tgen)
for (i in 2:(tgen+1)){
if (i%%7==0){
#print(i)
Ne=Ne%/%10
abline(v=Ne, col='darkpink')
print(paste('bottleneck',Ne))
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
p_=p_i
#print(pvector[i])
}
else{
Ne=Ne*1.5
print(Ne)
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
#print(pvector[i])
p_=p_i
}
}
plot(xaxis,pvector,xlim= c(0,tgen),ylim= c(0,1),type = "l", main = paste("Genetic Drift -Population size = ",Ne), xlab="Generation",ylab="Frequency")
}
genetic_drift_bottle(0.3,5,30)
############################## Script 3 ##############################
genetic_drift_bottle<-function(p_0,Ne,tgen) {
alelos<-c(1,0) #1 A and 0 al (numerical for estimating frequency directly)
pvector<-c();
pvector[1]<-p_0;
p_ = p_0;
xaxis<-c(0:tgen)
for (i in 2:(tgen+1)){
if (i%%7==0){
#print(i)
Ne=Ne%/%10
abline(v=Ne, col='forestgreen')
print(paste('bottleneck',Ne))
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
p_=p_i
#print(pvector[i])
}
else{
Ne=Ne*1.5
print(Ne)
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
#print(pvector[i])
p_=p_i
}
}
plot(xaxis,pvector,xlim= c(0,tgen),ylim= c(0,1),type = "l", main = paste("Genetic Drift -Population size = ",Ne), xlab="Generation",ylab="Frequency")
}
genetic_drift_bottle(0.3,5,30)
genetic_drift_bottle(0.5,10,100)
############################## Script 3 ##############################
genetic_drift_bottle<-function(p_0,Ne,tgen) {
############################## Script 3 ##############################
genetic_drift_bottle<-function(p_0,Ne,tgen) {
alelos<-c(1,0) #1 A and 0 al (numerical for estimating frequency directly)
pvector<-c();
pvector[1]<-p_0;
p_ = p_0;
xaxis<-c(0:tgen)
for (i in 2:(tgen+1)){
if (i%%7==0){
#print(i)
Ne=Ne%/%10
print(paste('bottleneck',Ne))
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
p_=p_i
#print(pvector[i])
}
else{
Ne=Ne*1.5
print(Ne)
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
#print(pvector[i])
p_=p_i
}
}
plot(xaxis,pvector,xlim= c(0,tgen),ylim= c(0,1),type = "l", main = paste("Genetic Drift -Population size = ",Ne), xlab="Generation",ylab="Frequency")
for (i in 2:(tgen+1)){
if (i%%7==0){
abline(v=Ne,col='forestgreen')}
}}
genetic_drift_bottle(0.3,5,30)
genetic_drift_bottle(0.5,10,100)
genetic_drift_bottle(0.3,5,10)
############################## Script 3 ##############################
genetic_drift_bottle<-function(p_0,Ne,tgen) {
alelos<-c(1,0) #1 A and 0 al (numerical for estimating frequency directly)
pvector<-c();
pvector[1]<-p_0;
p_ = p_0;
xaxis<-c(0:tgen)
for (i in 2:(tgen+1)){
if (i%%7==0){
#print(i)
Ne=Ne%/%10
print(paste('bottleneck',Ne))
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
p_=p_i
#print(pvector[i])
}
else{
Ne=Ne*1.5
print(Ne)
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
#print(pvector[i])
p_=p_i
}
}
plot(xaxis,pvector,xlim= c(0,tgen),ylim= c(0,1),type = "l", main = paste("Genetic Drift -Population size = ",Ne), xlab="Generation",ylab="Frequency")
for (i in 2:(tgen+1)){
if (i%%7==0){
lines(v=Ne,col='forestgreen')}
}}
genetic_drift_bottle(0.3,5,30)
genetic_drift_bottle(0.5,10,100)
############################## Script 3 ##############################
genetic_drift_bottle<-function(p_0,Ne,tgen) {
alelos<-c(1,0) #1 A and 0 al (numerical for estimating frequency directly)
pvector<-c();
pvector[1]<-p_0;
p_ = p_0;
xaxis<-c(0:tgen)
for (i in 2:(tgen+1)){
if (i%%7==0){
#print(i)
Ne=Ne%/%10
print(paste('bottleneck',Ne))
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
p_=p_i
#print(pvector[i])
}
else{
Ne=Ne*1.5
print(Ne)
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
#print(pvector[i])
p_=p_i
}
}
plot(xaxis,pvector,xlim= c(0,tgen),ylim= c(0,1),type = "l", main = paste("Genetic Drift -Population size = ",Ne), xlab="Generation",ylab="Frequency")
for (i in 2:(tgen+1)){
if (i%%7==0){
lines(v=i,col='forestgreen')}
}}
genetic_drift_bottle(0.3,5,30)
############################## Script 3 ##############################
genetic_drift_bottle<-function(p_0,Ne,tgen) {
alelos<-c(1,0) #1 A and 0 al (numerical for estimating frequency directly)
pvector<-c();
pvector[1]<-p_0;
p_ = p_0;
xaxis<-c(0:tgen)
for (i in 2:(tgen+1)){
if (i%%7==0){
#print(i)
Ne=Ne%/%10
print(paste('bottleneck',Ne))
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
p_=p_i
#print(pvector[i])
}
else{
Ne=Ne*1.5
print(Ne)
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
#print(pvector[i])
p_=p_i
}
}
plot(xaxis,pvector,xlim= c(0,tgen),ylim= c(0,1),type = "l", main = paste("Genetic Drift -Population size = ",Ne), xlab="Generation",ylab="Frequency")
}
genetic_drift_bottle(0.3,5,30)
genetic_drift_bottle(0.5,10,100)
genetic_drift_bottle(0.3,5,10)
############################## Script 3 ##############################
genetic_drift_bottle<-function(p_0,Ne,tgen) {
alelos<-c(1,0) #1 A and 0 al (numerical for estimating frequency directly)
pvector<-c();
pvector[1]<-p_0;
p_ = p_0;
xaxis<-c(0:tgen)
for (i in 2:(tgen+1)){
if (i%%7==0){
#print(i)
Ne=Ne%/%10
lines(v=Ne, col='forestgreen')
print(paste('bottleneck',Ne))
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
p_=p_i
#print(pvector[i])
}
else{
Ne=Ne*1.5
print(Ne)
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
#print(pvector[i])
p_=p_i
}
}
plot(xaxis,pvector,xlim= c(0,tgen),ylim= c(0,1),type = "l", main = paste("Genetic Drift -Population size = ",Ne), xlab="Generation",ylab="Frequency")
}
genetic_drift_bottle(0.3,5,30)
genetic_drift_bottle(0.5,10,100)
############################## Script 3 ##############################
genetic_drift_bottle<-function(p_0,Ne,tgen) {
alelos<-c(1,0) #1 A and 0 al (numerical for estimating frequency directly)
pvector<-c();
pvector[1]<-p_0;
p_ = p_0;
xaxis<-c(0:tgen)
for (i in 2:(tgen+1)){
if (i%%7==0){
#print(i)
Ne=Ne%/%10
print(paste('bottleneck',Ne))
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
p_=p_i
#print(pvector[i])
}
else{
Ne=Ne*1.5
print(Ne)
s_i =  sample(alelos,2*Ne, c(p_,1-p_), replace = T)
p_i=sum(s_i)/length(s_i)
pvector[i]<-p_i
#print(pvector[i])
p_=p_i
}
}
plot(xaxis,pvector,xlim= c(0,tgen),ylim= c(0,1),type = "l", main = paste("Genetic Drift -Population size = ",Ne), xlab="Generation",ylab="Frequency")
}
genetic_drift_bottle(0.3,5,30)
genetic_drift_bottle(0.5,10,100)
genetic_drift_bottle(0.3,5,10)
